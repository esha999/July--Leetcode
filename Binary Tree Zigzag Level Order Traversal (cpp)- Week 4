/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>> ans;
        if(root==NULL)
            return ans;
        
        stack<TreeNode *>st1;
        stack<TreeNode *>st2;
        vector<int> temp;
        bool leftright=1;
        st1.push(root);
        while(st1.empty()==0)
        {
            int n=st1.size();
            for(int i=1;i<=n;i++)
            {
                TreeNode *curr=st1.top();
                if(leftright==1)
                {
                    if(curr->left!=NULL)
                        st2.push(curr->left);
                    if(curr->right!=NULL)
                        st2.push(curr->right);
                }
                else if(leftright==0)
                {
                    if(curr->right!=NULL)
                        st2.push(curr->right);
                    if(curr->left!=NULL)
                        st2.push(curr->left);
                }
                temp.push_back(curr->val);
                st1.pop();
            }
            ans.push_back(temp);
            if(leftright==1)
                leftright=0;
            else 
                leftright=1;
            temp.clear();
            swap(st1,st2);
            
        }
        return ans;
    }
};
