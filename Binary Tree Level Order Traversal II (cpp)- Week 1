/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        
        vector<vector<int>>ans;
        if(root==NULL)
            return ans;
        queue<TreeNode *>q;
        stack<vector<int>>st;
        vector<int>temp;
        q.push(root);
        while(q.size()!=0)
        {
            int qsize=q.size();
            for(int i=0;i<qsize;i++)
            {
                TreeNode *curr=q.front();
                temp.push_back(curr->val);
                if(curr->left!=NULL)
                {
                    q.push(curr->left);
                    
                }
                if(curr->right!=NULL)
                {
                    q.push(curr->right);
                }
                q.pop();
                
            }
            st.push(temp);
            temp.clear();
        }
        
        while(!st.empty())
        {
            vector<int>temp1=st.top();
            ans.push_back(temp1);
            st.pop();
        }
        return ans;
    }
};
